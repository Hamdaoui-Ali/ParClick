# Generated by Django 5.2.4 on 2025-07-22 00:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.PositiveIntegerField(unique=True)),
                ('place_number', models.CharField(max_length=5)),
                ('vehicule_type', models.CharField(choices=[('car', 'Car'), ('motorcycle', 'Motorcycle')], max_length=10)),
                ('client_cin', models.CharField(max_length=8)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('duration', models.FloatField()),
                ('payment_type', models.CharField(choices=[('cash', 'Cash'), ('credit_card', 'Credit Card')], max_length=20)),
                ('price', models.FloatField()),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
            ],
        ),
        migrations.CreateModel(
            name='ParkingPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=5, unique=True)),
                ('is_available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('employee_id', models.CharField(max_length=10, unique=True)),
                ('full_name', models.CharField(max_length=100)),
                ('employee_cin', models.CharField(max_length=8, unique=True)),
                ('employee_phone', models.CharField(max_length=15, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('vehicule_type', models.CharField(choices=[('car', 'Car'), ('motorcycle', 'Motorcycle')], max_length=10)),
                ('client_cin', models.CharField(max_length=8)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('payment_type', models.CharField(blank=True, choices=[('cash', 'Cash'), ('credit_card', 'Credit Card')], max_length=20, null=True)),
                ('price', models.FloatField(default=0)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_app.parkingplace')),
            ],
        ),
    ]
